// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project2.API.Data;

#nullable disable

namespace Project2.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006193826_InitialDatabaseSetup")]
    partial class InitialDatabaseSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project2.Shared.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaEvaluacion")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2");

                    b.Property<int>("ProyectoId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("VoluntarioId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("Project2.Shared.Organizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HistorialImpactoSocial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InformacionContacto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoProyectos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Organizadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HistorialImpactoSocial = "Líderes en reforestación en 5 países.",
                            InformacionContacto = "info@global.org",
                            NombreContacto = "ONG Global Ambiental",
                            TipoProyectos = "Ambiental"
                        },
                        new
                        {
                            Id = 2,
                            HistorialImpactoSocial = "Capacitación a más de 1000 jóvenes.",
                            InformacionContacto = "contacto@techgood.com",
                            NombreContacto = "Tech for Good Foundation",
                            TipoProyectos = "Tecnológico/Educativo"
                        });
                });

            modelBuilder.Entity("Project2.Shared.Participacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActividadesRealizadas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("HistorialHoras")
                        .HasMaxLength(10)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProyectoId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("VoluntarioId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Participaciones");
                });

            modelBuilder.Entity("Project2.Shared.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DuracionEstimada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("OrganizadorId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("RequisitosVoluntarios")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UbicacionGeografica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Project2.Shared.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProyectoId")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("ResponsableAsignado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TiempoEstimado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("Project2.Shared.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreasInteres")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisponibilidadTiempo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Idiomas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Voluntarios");
                });

            modelBuilder.Entity("Project2.Shared.Evaluacion", b =>
                {
                    b.HasOne("Project2.Shared.Proyecto", "Proyecto")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project2.Shared.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("Project2.Shared.Participacion", b =>
                {
                    b.HasOne("Project2.Shared.Proyecto", "Proyecto")
                        .WithMany("Participaciones")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project2.Shared.Voluntario", "Voluntario")
                        .WithMany("Participaciones")
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("Project2.Shared.Proyecto", b =>
                {
                    b.HasOne("Project2.Shared.Organizador", "Organizador")
                        .WithMany("ProyectosLiderados")
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("Project2.Shared.Tarea", b =>
                {
                    b.HasOne("Project2.Shared.Proyecto", "Proyecto")
                        .WithMany("Tareas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Project2.Shared.Organizador", b =>
                {
                    b.Navigation("ProyectosLiderados");
                });

            modelBuilder.Entity("Project2.Shared.Proyecto", b =>
                {
                    b.Navigation("Evaluaciones");

                    b.Navigation("Participaciones");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("Project2.Shared.Voluntario", b =>
                {
                    b.Navigation("Participaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
